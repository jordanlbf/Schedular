/* Form Base - Core input styling */

/* Form inputs */
.form-input {
  width: 100%;
  min-width: 0;
  padding: var(--spacing-lg) var(--spacing-xl);
  border: 2px solid var(--input-border);
  border-radius: var(--radius-lg);
  background: var(--input-bg);
  backdrop-filter: var(--blur);
  -webkit-backdrop-filter: var(--blur);
  color: var(--input-text);
  font-size: var(--text-base);
  font-weight: var(--font-medium);
  transition: all var(--transition-normal);
  font-family: inherit;
  box-sizing: border-box;
}

.form-input:hover {
  border-color: var(--border-hover);
  background: var(--panel);
}

.form-input:focus {
  outline: none;
  border-color: var(--input-focus-border);
  background: var(--panel);
  box-shadow: var(--form-input-focus-shadow), var(--form-input-focus-ring);
  transform: translateY(-1px);
}

.form-input:focus-visible {
  outline: none;
  border-color: var(--input-focus-border);
  box-shadow: var(--form-input-focus-shadow), var(--form-input-focus-ring);
}

.form-input:invalid:not(:placeholder-shown):not(:focus) {
  border-color: var(--error);
  box-shadow: 0 0 0 1px var(--error);
}

/* Override invalid styling for required fields that haven't been touched */
.form-input[required]:invalid:not(:focus):not(.attempted) {
  border-color: var(--input-border);
  box-shadow: none;
  background: var(--input-bg);
}

/* Error state when form submission attempted */
.form-input[required]:invalid:not(:focus).attempted {
  border-color: var(--error);
  box-shadow: 0 0 0 1px var(--error);
}

/* Error state for fields */
.form-input.error {
  border-color: var(--error);
  box-shadow: var(--form-error-ring);
  background: var(--form-error-bg);
}

.form-input.error:focus {
  border-color: var(--input-focus-border);
  box-shadow: var(--form-input-focus-shadow), var(--form-input-focus-ring);
}

/* Success styling when field has content */
.form-input:valid:not(:placeholder-shown):not(:focus):not([value=""]) {
  border-color: var(--success);
  border-width: 2px;
  box-shadow: var(--form-success-ring), var(--form-success-shadow);
  background: linear-gradient(135deg,
    var(--panel) 0%,
    var(--form-success-bg-light) 100%
  );
}

/* Select dropdowns - success when real option selected */
select.form-input:valid:not(:focus):not([value=""]) {
  border-color: var(--success);
  border-width: 2px;
  box-shadow: var(--form-success-ring), var(--form-success-shadow);
  background: linear-gradient(135deg,
    var(--input-bg) 0%,
    var(--form-success-bg-light) 100%
  );
}

/* Keep select neutral when no selection */
select.form-input[value=""]:not(:focus):not(.error):not(.attempted) {
  border-color: var(--input-border);
  border-width: 1px;
  box-shadow: none;
  background: var(--input-bg);
}

/* Error styling for select */
select.form-input.error,
select.form-input.attempted:invalid {
  border-color: var(--error);
  box-shadow: var(--form-error-ring);
  background: var(--form-error-bg);
}

/* Style empty select placeholder */
select.form-input:invalid {
  color: var(--input-placeholder);
}

/* Selected state normal text */
select.form-input:valid {
  color: var(--input-text);
}

/* Override for error state */
select.form-input.error:invalid {
  color: var(--input-placeholder);
}

/* Placeholder option muted */
select.form-input option[value=""] {
  color: var(--input-placeholder);
  font-style: italic;
}

.form-input:disabled {
  background: var(--panel-hover);
  color: var(--muted);
  border-color: var(--border);
  cursor: not-allowed;
  opacity: 0.5;
}

.form-input:disabled::placeholder {
  color: var(--muted);
  opacity: 0.2;
}

.form-input::placeholder {
  color: var(--input-placeholder);
  opacity: 0.5;
  font-weight: 400;
}

.form-textarea {
  resize: vertical;
  min-height: 100px;
  line-height: 1.6;
  padding-top: 14px;
  padding-bottom: 14px;
  font-family: inherit;
  transition: min-height 0.3s ease, box-shadow 0.3s ease;
}

.form-textarea:focus {
  min-height: 120px;
}

/* Select dropdown styling */
select.form-input {
  cursor: pointer;
  background-color: var(--input-bg);
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%2394a3b8' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.2' d='m7 9 3 3 3-3'/%3e%3c/svg%3e");
  background-position: right 14px center;
  background-repeat: no-repeat;
  background-size: 14px;
  padding-right: 40px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  transition: all var(--transition-normal);
}

select.form-input::-ms-expand {
  display: none;
}

select.form-input:hover {
  background-color: var(--panel-hover);
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%2364748b' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.2' d='m7 9 3 3 3-3'/%3e%3c/svg%3e");
  background-position: right 14px center;
  background-repeat: no-repeat;
  background-size: 14px;
}

select.form-input:focus {
  background-color: var(--panel);
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%2364748b' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.2' d='m7 9 3 3 3-3'/%3e%3c/svg%3e");
  background-position: right 14px center;
  background-repeat: no-repeat;
  background-size: 14px;
}

select.form-input:hover:focus {
  background-color: var(--panel);
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%2364748b' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.2' d='m7 9 3 3 3-3'/%3e%3c/svg%3e");
  background-position: right 14px center;
  background-repeat: no-repeat;
  background-size: 14px;
}
