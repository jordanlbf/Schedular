name: Bundle Size Check

on:
  pull_request:
    branches: [main, develop]

jobs:
  bundle-size:
    name: Check Bundle Size
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history for comparison

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build current branch
        run: npm run build

      - name: Get current bundle size
        id: current
        run: |
          CURRENT_SIZE=$(du -sb dist | awk '{print $1}')
          echo "size=$CURRENT_SIZE" >> $GITHUB_OUTPUT
          echo "Current bundle size: $(numfmt --to=iec-i --suffix=B $CURRENT_SIZE)"

      - name: Checkout base branch
        run: |
          git fetch origin ${{ github.base_ref }}
          git checkout origin/${{ github.base_ref }}

      - name: Install dependencies (base)
        run: npm ci

      - name: Build base branch
        run: npm run build

      - name: Get base bundle size
        id: base
        run: |
          BASE_SIZE=$(du -sb dist | awk '{print $1}')
          echo "size=$BASE_SIZE" >> $GITHUB_OUTPUT
          echo "Base bundle size: $(numfmt --to=iec-i --suffix=B $BASE_SIZE)"

      - name: Calculate diff and comment
        uses: actions/github-script@v7
        with:
          script: |
            const current = parseInt('${{ steps.current.outputs.size }}');
            const base = parseInt('${{ steps.base.outputs.size }}');
            const diff = current - base;
            const diffPercent = ((diff / base) * 100).toFixed(2);
            
            const formatBytes = (bytes) => {
              if (bytes === 0) return '0 B';
              const k = 1024;
              const sizes = ['B', 'KB', 'MB', 'GB'];
              const i = Math.floor(Math.log(Math.abs(bytes)) / Math.log(k));
              return (bytes / Math.pow(k, i)).toFixed(2) + ' ' + sizes[i];
            };
            
            let emoji = '📊';
            let status = 'No significant change';
            if (diff > 0) {
              emoji = diff > base * 0.05 ? '🔴' : '⚠️';
              status = 'Increased';
            } else if (diff < 0) {
              emoji = '✅';
              status = 'Decreased';
            }
            
            const comment = `## ${emoji} Bundle Size Report
            
            | Metric | Size |
            |--------|------|
            | **Base** (${context.payload.pull_request.base.ref}) | ${formatBytes(base)} |
            | **Current** (${context.payload.pull_request.head.ref}) | ${formatBytes(current)} |
            | **Difference** | ${diff >= 0 ? '+' : ''}${formatBytes(diff)} (${diff >= 0 ? '+' : ''}${diffPercent}%) |
            | **Status** | ${status} |
            
            ${diff > base * 0.05 ? '⚠️ **Warning**: Bundle size increased significantly!' : ''}
            ${diff < 0 ? '🎉 Great job reducing bundle size!' : ''}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            
            // Fail if bundle grew by more than 10%
            if (diffPercent > 10) {
              core.setFailed(`Bundle size increased by ${diffPercent}% - exceeds 10% threshold`);
            }
